generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                   Int        @id @default(autoincrement())
  email                String     @unique
  activated            Boolean    @default(false)
  strikes              Int        @default(0)
  locked               Boolean    @default(false)
  passwordHash         String
  passwordSalt         String
  passwords            Password[]
  session              Session[]
  failedLoginAttempts  FailedLoginAttempt[]
}

model FailedLoginAttempt {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  timestamp  DateTime
  ip         String
  agent      String
}

model Password {
  id         Int     @id @default(autoincrement())
  name       String
  encrypted  String
  salt       String
  iv         String
  user       User    @relation(fields: [userId], references: [id])
  userId     Int
  @@unique([name, userId])
}

model Session {
  id       Int      @id @default(autoincrement())
  user     User     @relation(fields: [userId], references: [id])
  userId   Int
  token    String   @unique
  issued   DateTime
  expires  DateTime
  revoked  Boolean  @default(false)
  ip       String
  agent    String
}

model Token {
  id       Int       @id @default(autoincrement())
  type     String
  user     User      @relation(fields: [userId], references: [id])
  userId   Int
  value    String    @unique
  issued   DateTime
  expires  DateTime
  invalid  Boolean   @default(false)
}
